<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>PTS - V2</title>

    <link href="/static/bootstrap/css/bootstrap.css" rel="stylesheet">
    <link href="/static/style.css" rel="stylesheet">

    
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-1152810-4"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'UA-1152810-4');
    </script>
  </head>

  <body>
    <div class="container">
        
        <div class="row" style="background-color:darkgrey">
            <div class="col-xs-12">
                <h1>Post Test Server V2</h1>
            </div>
        </div>

        
        <div class="row">
            
            <div class="col-xs-2">
                <a href="/"><img src="/static/ToiletLogo.jpg" style="margin-top: 5px;margin-bottom:5px"  /></a><br/>
<a href="/s/whatisthis.html">What is this?</a><br/>
<a href="/s/somerules.html">Some Rules</a><br/>
<a href="/s/howitworks.html">How it works</a><br/>
<a href="/s/dumpfields.html">What's in a dump</a><br/>
<a href="/s/contact.html">Contact</a><br/>
            </div>

            <div class="col-xs-10">
              <div class="row">
                <div class="col-xs-12">

    <h1>Welcome to Henry's Post Test Server V2!</h2>    
    This is a service for developers testing clients that POST and GET things over HTTP.    
    <p>
        To begin, use the search below to find an unclaimed toilet. (Toilets are where your dumps go)        
    </p>
    <p>
    <form>
        <input type="text" id="toiletName"/ size="40">
        <input type="submit" id="findToilet" value="Look up*" /><br/>
        <input type="button" id="randomToilet" value="New Random Toilet" />
    </form>
    </p>
    <p>
      *All this form does is redirect you to /t/[search string]
    </p>

    <p>
      <h3>CORS is now supported</h3>
      [8/6/2019] This header: "Access-Control-Allow-Origin: *" is now set on all responses.
    </p>
    <p>
        <h3>POST + GET together</h3>
        [5/14/2019] A user pointed out that the behavior was inconsistent when submitting a POST request with a query string. 
        This is a weird case because <a href="https://www.w3.org/TR/html4/interact/forms.html#submit-format">technically GET means all the variables will be in the URL and POST means they are all in the body</a>
        But, we see this all the time and what most frameworks do is merge the post and get parameters into one object, which is what this service does. So you will see both together. If you wish
        to view the post body seperately from the get parameters you may configure the toilet to dump the post body first. In which case the stream will be consumed and only the get
        parameters will be parsed.
      </p>
      <p>
        <h3>First update: Anti-Spam</h3>
        [7/13/2018] Because of people <a href="https://imgur.com/a/Ac1KJYC">like this</a> I have had to add logic to disable toilets that receive too many requests per minute.<br/>
        Feel free to reach out to me if you feel your toilet has been blocked in error because bugs are a thing.
      </p>
      <p>
        <h3>This service is super beta.</h3>
        [Early 2017] Expect bugs. Get my email from the contact page and tell me about my bugs.</h2>
      </p>
   

<script type="text/javascript">
  function hasWhiteSpace(s) {
    return /\s/g.test(s);
  }

  document.getElementById("findToilet").onclick = function() {
    toilet = document.getElementById("toiletName").value;
    if(hasWhiteSpace(toilet)) {
        alert("Toilet mustn't have whitespace in the name")
        return false;
    }
      
    if(!toilet || toilet.len < 1) {
      alert("Please specify a toilet to search for");
      return false;
    }

    location.href = "/t/" + toilet;
    return false;    
  }

  document.getElementById("randomToilet").onclick = function() {
    
    var randStr = Array(5+1).join((Math.random().toString(36)+'00000000000000000').slice(2, 18)).slice(0, 5);
    var timestr = Math.round((new Date()).getTime() / 1000);
    var final = randStr + "-" + timestr

    location.href = "/t/" + final;
  }
</script>

        </div>
    </div>
</div>


        </div>
    </div>
</body>
</html>
